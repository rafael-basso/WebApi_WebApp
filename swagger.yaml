openapi: 3.0.1
info:
  title: UserAPI
  version: '1.0'
paths:
  /User:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /User/{id}:
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /User/novo:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestNewUser'
          text/json:
            schema:
              $ref: '#/components/schemas/RequestNewUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RequestNewUser'
      responses:
        '201':
          description: Created
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /User/atualizar/{id}:
    put:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateUser'
          text/json:
            schema:
              $ref: '#/components/schemas/RequestUpdateUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RequestUpdateUser'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
  /User/deletar/{id}:
    delete:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
components:
  schemas:
    RequestNewUser:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    RequestUpdateUser:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        active:
          type: boolean
      additionalProperties: false
    ResponseMessage:
      type: object
      properties:
        mensagem:
          type: string
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        active:
          type: boolean
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false